"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/resume-analyzer/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResumeAPI: () => (/* binding */ ResumeAPI)\n/* harmony export */ });\n// API utility for backend communication\nconst API_BASE_URL = 'https://statuscode-production.up.railway.app'; // Production backend URL\nclass ResumeAPI {\n    static async analyzeResume(resumeText) {\n        try {\n            const response = await fetch(\"\".concat(API_BASE_URL, \"/analyze_resume\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    resume_text: resumeText\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Resume analysis failed: \".concat(response.statusText));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('Resume analysis error:', error);\n            throw error;\n        }\n    }\n    static async uploadOCRResume(file) {\n        try {\n            const formData = new FormData();\n            formData.append('file', file);\n            const response = await fetch(\"\".concat(API_BASE_URL, \"/api/ocr_resume\"), {\n                method: 'POST',\n                body: formData\n            });\n            if (!response.ok) {\n                throw new Error(\"OCR upload failed: \".concat(response.statusText));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('OCR upload error:', error);\n            throw error;\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdDQUF3QztBQUN4QyxNQUFNQSxlQUFlLGdEQUFnRCx5QkFBeUI7QUErQ3ZGLE1BQU1DO0lBQ1gsYUFBYUMsY0FBY0MsVUFBa0IsRUFBaUM7UUFDNUUsSUFBSTtZQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxHQUFnQixPQUFiTCxjQUFhLG9CQUFrQjtnQkFDN0RNLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO2dCQUNsQjtnQkFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUNuQkMsYUFBYVI7Z0JBQ2Y7WUFDRjtZQUVBLElBQUksQ0FBQ0MsU0FBU1EsRUFBRSxFQUFFO2dCQUNoQixNQUFNLElBQUlDLE1BQU0sMkJBQStDLE9BQXBCVCxTQUFTVSxVQUFVO1lBQ2hFO1lBRUEsT0FBTyxNQUFNVixTQUFTVyxJQUFJO1FBQzVCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtZQUN4QyxNQUFNQTtRQUNSO0lBQ0Y7SUFFQSxhQUFhRSxnQkFBZ0JDLElBQVUsRUFBOEI7UUFDbkUsSUFBSTtZQUNGLE1BQU1DLFdBQVcsSUFBSUM7WUFDckJELFNBQVNFLE1BQU0sQ0FBQyxRQUFRSDtZQUV4QixNQUFNZixXQUFXLE1BQU1DLE1BQU0sR0FBZ0IsT0FBYkwsY0FBYSxvQkFBa0I7Z0JBQzdETSxRQUFRO2dCQUNSRSxNQUFNWTtZQUNSO1lBRUEsSUFBSSxDQUFDaEIsU0FBU1EsRUFBRSxFQUFFO2dCQUNoQixNQUFNLElBQUlDLE1BQU0sc0JBQTBDLE9BQXBCVCxTQUFTVSxVQUFVO1lBQzNEO1lBRUEsT0FBTyxNQUFNVixTQUFTVyxJQUFJO1FBQzVCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMscUJBQXFCQTtZQUNuQyxNQUFNQTtRQUNSO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiRDpcXFBfRmlsZXNcXHN0YXR1c2NvZGVcXHVpXFxsaWJcXGFwaS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBUEkgdXRpbGl0eSBmb3IgYmFja2VuZCBjb21tdW5pY2F0aW9uXHJcbmNvbnN0IEFQSV9CQVNFX1VSTCA9ICdodHRwczovL3N0YXR1c2NvZGUtcHJvZHVjdGlvbi51cC5yYWlsd2F5LmFwcCc7IC8vIFByb2R1Y3Rpb24gYmFja2VuZCBVUkxcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVzdW1lQW5hbHlzaXNSZXN1bHQge1xyXG4gIGF0c19zY29yZTogbnVtYmVyO1xyXG4gIGZlZWRiYWNrOiBzdHJpbmdbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBPQ1JBbmFseXNpc1Jlc3VsdCB7XHJcbiAgZXh0cmFjdGVkX3RleHQ6IHN0cmluZztcclxuICBjb25maWRlbmNlOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU09QQW5hbHlzaXNSZXN1bHQge1xyXG4gIGFpX2VuaGFuY2VkOiBib29sZWFuO1xyXG4gIGFuYWx5c2lzOiB7XHJcbiAgICB3b3JkX2NvdW50OiBudW1iZXI7XHJcbiAgICBwYXJhZ3JhcGhfY291bnQ6IG51bWJlcjtcclxuICAgIHN0cmVuZ3Roczogc3RyaW5nW107XHJcbiAgICB3ZWFrbmVzc2VzOiBzdHJpbmdbXTtcclxuICAgIHN1Z2dlc3Rpb25zOiBzdHJpbmdbXTtcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNPUEVuaGFuY2VtZW50UmVzdWx0IHtcclxuICBlbmhhbmNlbWVudDoge1xyXG4gICAgb3JpZ2luYWxfdGV4dDogc3RyaW5nO1xyXG4gICAgc3VnZ2VzdGlvbnM6IHN0cmluZ1tdO1xyXG4gICAgZW5oYW5jZWRfc2VjdGlvbnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XHJcbiAgICBpbXByb3ZlbWVudF9hcmVhczogc3RyaW5nW107XHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTT1BBbmFseXNpc1JlcXVlc3Qge1xyXG4gIHRleHQ6IHN0cmluZztcclxuICBvcHRpb25zPzoge1xyXG4gICAgZW5oYW5jZT86IGJvb2xlYW47XHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTT1BFbmhhbmNlbWVudFJlcXVlc3Qge1xyXG4gIHRleHQ6IHN0cmluZztcclxuICBjb250ZXh0Pzoge1xyXG4gICAgdGFyZ2V0X3Byb2dyYW0/OiBzdHJpbmc7XHJcbiAgICB1bml2ZXJzaXR5Pzogc3RyaW5nO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBSZXN1bWVBUEkge1xyXG4gIHN0YXRpYyBhc3luYyBhbmFseXplUmVzdW1lKHJlc3VtZVRleHQ6IHN0cmluZyk6IFByb21pc2U8UmVzdW1lQW5hbHlzaXNSZXN1bHQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7QVBJX0JBU0VfVVJMfS9hbmFseXplX3Jlc3VtZWAsIHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgcmVzdW1lX3RleHQ6IHJlc3VtZVRleHRcclxuICAgICAgICB9KVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlc3VtZSBhbmFseXNpcyBmYWlsZWQ6ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1Jlc3VtZSBhbmFseXNpcyBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIHVwbG9hZE9DUlJlc3VtZShmaWxlOiBGaWxlKTogUHJvbWlzZTxPQ1JBbmFseXNpc1Jlc3VsdD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSk7XHJcblxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9CQVNFX1VSTH0vYXBpL29jcl9yZXN1bWVgLCB7XHJcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgYm9keTogZm9ybURhdGFcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBPQ1IgdXBsb2FkIGZhaWxlZDogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignT0NSIHVwbG9hZCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQVBJX0JBU0VfVVJMIiwiUmVzdW1lQVBJIiwiYW5hbHl6ZVJlc3VtZSIsInJlc3VtZVRleHQiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicmVzdW1lX3RleHQiLCJvayIsIkVycm9yIiwic3RhdHVzVGV4dCIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJ1cGxvYWRPQ1JSZXN1bWUiLCJmaWxlIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});